apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.resmenu"
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
    }
}

dependencies {

    def room_version = "1.1.1"

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation 'com.github.bumptech.glide:glide:4.0.0-RC0'
    //  implementation 'com.github.bumptech.glide:glide:4.7.1'
    // for circle imageView
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    // for design
    implementation 'com.android.support:design:28.0.0'

    // jackson library for databinding
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.7'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'
    implementation 'com.android.support:cardview-v7:28.0.0'

    //volley network library for GET request and POST request
    implementation 'com.android.volley:volley:1.1.1'

    // jackson library for databinding and getting response from server
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.7'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.7'
    // jackson databind contains basic conversion functionality that helps us to convert json to java object via ObjectMapper class
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.7'

    // multidex library allow us to create more than 64K methods which creates more than one dex file and our application can't fail while loading
    implementation 'com.android.support:multidex:1.0.3'

    //butterknife library to find the views as well as cast the views using annotation processor
    implementation 'com.jakewharton:butterknife:8.0.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.0.1'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    // room database

    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    testImplementation "android.arch.persistence.room:testing:$room_version"
}
